# Generated by Django 5.1.4 on 2024-12-12 13:29

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country_Codes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=100, unique=True)),
                ('calling_code', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'ordering': ['calling_code'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryResourses',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('book_name', models.CharField(blank=True, max_length=80, null=True)),
                ('book_type', models.CharField(blank=True, choices=[('story', 'Story'), ('poem', 'Poem'), ('short_story', 'Short Strory'), ('novel', 'Novel'), ('drama', 'Drama')], max_length=20, null=True)),
                ('author', models.CharField(blank=True, max_length=30, null=True)),
                ('language', models.CharField(blank=True, max_length=30, null=True)),
                ('status', models.CharField(choices=[('stock_out', 'Stock Out'), ('stock_in', 'Stock In'), ('taken', 'Taken')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('full_name', models.CharField(max_length=250)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be between 9 and 15 digits.', regex='^\\d{9,15}$')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=16, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('age', models.CharField(blank=True, max_length=4, null=True)),
                ('watsapp_number', models.CharField(blank=True, max_length=15, null=True)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('is_non_teaching_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_librarian', models.BooleanField(default=False)),
                ('is_teaching_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='app1_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='app1_user_permissions', to='auth.permission', verbose_name='user permissions')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminapp.district')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminapp.state')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(blank=True, max_length=120, null=True)),
                ('certifiation', models.ImageField(blank=True, upload_to='s-admin-certificate-images/')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='s-admin-profile-images/')),
                ('experience', models.CharField(blank=True, max_length=50, null=True)),
                ('role', models.CharField(blank=True, max_length=25, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Librarian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(blank=True, max_length=120, null=True)),
                ('certifiation', models.ImageField(blank=True, upload_to='s-librarian-certificate-images/')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='s-librarian-profile-images/')),
                ('experience', models.CharField(blank=True, max_length=50, null=True)),
                ('id_of_librarian', models.CharField(blank=True, editable=False, max_length=100, null=True, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='librarian', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminapp.state'),
        ),
        migrations.CreateModel(
            name='StudentDetails',
            fields=[
                ('auto_id', models.AutoField(primary_key=True, serialize=False)),
                ('student_id', models.CharField(blank=True, editable=False, max_length=20, unique=True)),
                ('full_name', models.CharField(max_length=250)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='s-student-profile-images/')),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('place', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=60, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=80, null=True)),
                ('father_ph', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be between 9 and 15 digits.', regex='^\\d{9,15}$')])),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=16, null=True)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('educational_project', models.CharField(choices=[('english_medium', 'English Medium'), ('malayalam_medium', 'Malayalam Medium')], max_length=17)),
                ('previous_school_name', models.CharField(blank=True, max_length=200, null=True)),
                ('grade', models.CharField(blank=True, max_length=20, null=True)),
                ('second_language', models.CharField(choices=[('hindi', 'Hindi'), ('malayalam', 'Malayalam'), ('arabic', 'Arabic'), ('sanskrit', 'SansKrit')], max_length=10)),
                ('emergency_contact', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be between 9 and 15 digits.', regex='^\\d{9,15}$')])),
                ('watsapp_number', models.CharField(blank=True, max_length=15, null=True)),
                ('total_payable', models.CharField(blank=True, default='15000', max_length=15, null=True)),
                ('country_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminapp.country_codes')),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrow_date', models.DateField()),
                ('return_date', models.DateField()),
                ('librarian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapp.librarian')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='adminapp.libraryresourses')),
                ('students', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='adminapp.studentdetails')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.CharField(default='15000', max_length=15)),
                ('signature', models.CharField(blank=True, max_length=256, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_amount', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('paypal', 'PayPal'), ('cash', 'Cash')], default='cash', max_length=50)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('account_holder_name', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=50, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=50, null=True)),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='payment-request/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapp.studentdetails')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('qualification', models.CharField(blank=True, max_length=120, null=True)),
                ('certifiation', models.ImageField(blank=True, upload_to='s-staff-certificate-images/')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='s-staff-profile-images/')),
                ('experience', models.CharField(blank=True, max_length=50, null=True)),
                ('about', models.CharField(blank=True, max_length=200, null=True)),
                ('staff_id', models.CharField(blank=True, editable=False, max_length=80, primary_key=True, serialize=False, unique=True)),
                ('is_administrative', models.BooleanField(default=False)),
                ('is_accountant', models.BooleanField(default=False)),
                ('is_clerk', models.BooleanField(default=False)),
                ('is_IT_administrator', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to=settings.AUTH_USER_MODEL)),
                ('student_fees', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapp.studentfees')),
            ],
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('qualification', models.CharField(blank=True, max_length=120, null=True)),
                ('certifiation', models.ImageField(blank=True, null=True, upload_to='s-teacher-certificate-images/')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='s-teacher-profile-images/')),
                ('experience', models.CharField(blank=True, max_length=50, null=True)),
                ('teachers_id', models.CharField(blank=True, editable=False, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('tecahing_position', models.CharField(blank=True, choices=[('prt', 'PRT'), ('tgt', 'TGT'), ('pgt', 'PGT'), ('pe', 'PE')], max_length=20, null=True)),
                ('specialised_subjects', models.CharField(blank=True, max_length=90, null=True)),
                ('teaching_license', models.CharField(blank=True, max_length=80, null=True)),
                ('grade', models.CharField(blank=True, max_length=20, null=True)),
                ('about', models.CharField(blank=True, max_length=200, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapp.studentdetails')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
